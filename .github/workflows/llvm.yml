# This is a basic workflow to help you get started with Actions

name: WASMER-LLVM-WINDOWS

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [wasmer_llvm]
  pull_request:
    branches: [wasmer_llvm]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install scoop
        shell: pwsh
        run: |
          iwr -useb get.scoop.sh | iex
          refreshenv
          scoop install 7zip curl wget
      - name: Setup
        run: |
          $llvm_path = $pwd.ToString() + "\llvm-11.1.0-windows"
          echo "LLVM_SYS_110_PREFIX=$llvm_path" >> $Env:GITHUB_ENV
          echo $Env:GITHUB_ENV
          cat $Env:GITHUB_ENV
          echo $Env:LLVM_SYS_110_PREFIX
          [Environment]::SetEnvironmentVariable("LLVM_SYS_110_PREFIX", $llvm_path, 'User')
          echo $Env:LLVM_SYS_110_PREFIX
          curl -o llvm-11.1.0-windows.zip -L "https://github.com/hanabi1224/ci-playground/releases/download/llvm-windows-11.1.0-pre2/llvm-11.1.0-windows.zip"
          7z x -o"llvm-11.1.0-windows" -y -r llvm-11.1.0-windows.zip
          dir
          dir $llvm_path
          git clone https://github.com/hanabi1224/wasmer
          pushd wasmer
          git checkout win_llvm
      - name: Build compiler-llvm
        run: |
          pushd wasmer/lib/compiler-llvm
          cargo build --release
      - name: Build cli
        run: |
          pushd wasmer/lib/cli
          # cargo build --features llvm
          cargo build --release --features llvm
      - name: Test windows cli
        run: |
          cp wasmer/target/release/wasmer.exe wasmer.exe
          wasmer --llvm app.wasm
      - name: Build c-api
        run: |
          pushd wasmer/lib/c-api
          cargo build --release --features default,llvm,dylib
      - name: Upload Artifacts CLI
        uses: actions/upload-artifact@v2
        with:
          name: wasmer.exe
          path: wasmer/target/release/wasmer.exe
          if-no-files-found: error
          retention-days: 30
      - name: Upload Artifacts dylib
        uses: actions/upload-artifact@v2
        with:
          name: wasmer.dll
          path: wasmer/target/release/wasmer.dll
          if-no-files-found: error
          retention-days: 30
